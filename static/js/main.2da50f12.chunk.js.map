{"version":3,"sources":["components/PeopleList/PeopleList.tsx","components/Dropdown/Dropdown.tsx","data/people.ts","App.tsx","index.tsx"],"names":["PeopleList","users","onSelect","className","role","length","map","person","name","slug","sex","onMouseDown","onKeyDown","href","cn","Dropdown","delay","onSelected","useState","query","setQuery","appliedQuery","setAppliedQuery","isVisible","setIsVisible","filteredPeople","useMemo","filter","toLowerCase","includes","trim","applyQuery","useCallback","debounce","type","placeholder","value","onChange","event","target","onFocus","onBlur","peopleFromServer","born","died","fatherName","motherName","App","selectedUser","setSelectedUser","ReactDOM","render","document","getElementById"],"mappings":"qOAQaA,EAA8B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnD,OACE,qBACEC,UAAU,gBACVC,KAAK,OAFP,SAIE,qBAAKD,UAAU,mBAAf,SAEIF,EAAMI,OACDJ,EAAMK,KAAI,SAAAC,GACX,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,IAGF,OAEE,aADA,CACA,OACEP,UAAU,gBAEVQ,YAAa,kBAAMT,EAASK,EAAf,EACbK,UAAW,kBAAMV,EAASK,EAAf,EAJb,SAME,mBACEM,KAAK,IACLV,UAAWW,IACT,gBACA,CAAE,kBAA2B,MAARJ,IAJzB,SAOGF,KAXEC,EAeV,IAEC,qBAAKN,UAAU,gBAAf,SACE,6DAOf,ECzCYY,EAA4B,SAAC,GAInC,IAHLd,EAGI,EAHJA,MACAe,EAEI,EAFJA,MAEI,IADJC,kBACI,MADS,WAAS,EAClB,EACJ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAA2BC,mBAAQ,WACvC,OAAOzB,EAAM0B,QAAO,SAAApB,GAAM,OAAIA,EAAOC,KAAKoB,cACvCC,SAASR,EAAaS,OAAOF,cADN,GAE3B,GAAE,CAACP,IAEEU,EAAaC,sBACjBC,mBAASX,EAAiBN,GAC1B,CAACK,IAeH,OACE,sBAAKlB,UAAWW,IAAG,WAAY,CAAE,YAAaS,IAA9C,UACE,qBAAKpB,UAAU,mBAAf,SACE,uBACE+B,KAAK,OACLC,YAAY,2BACZhC,UAAU,QACViC,MAAOjB,EACPkB,SApBkB,SAACC,GACzBlB,EAASkB,EAAMC,OAAOH,OACtBL,EAAWO,EAAMC,OAAOH,MACzB,EAkBOI,QAAS,kBAAMhB,GAAa,EAAnB,EACTiB,OAAQ,kBAAMjB,GAAa,EAAnB,MAGZ,cAAC,EAAD,CACEvB,MAAOwB,EACPvB,SAtBmB,SAACK,GACxBU,EAAWV,GACXa,EAASb,EAAOC,MAChBc,EAAgBf,EAAOC,MACvBgB,GAAa,EACd,MAqBF,EC5DYkB,EAA6B,CACxC,CACElC,KAAM,oBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZrC,KAAM,0BAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZrC,KAAM,yBAER,CACED,KAAM,iBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZrC,KAAM,uBAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZrC,KAAM,wBAER,CACED,KAAM,sBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZrC,KAAM,4BAER,CACED,KAAM,wBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZrC,KAAM,8BAER,CACED,KAAM,wBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZrC,KAAM,8BAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZrC,KAAM,wBAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZrC,KAAM,wBAER,CACED,KAAM,wBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZrC,KAAM,8BAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZrC,KAAM,yBAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZrC,KAAM,yBAER,CACED,KAAM,2BACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZrC,KAAM,iCAER,CACED,KAAM,uBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZrC,KAAM,6BAER,CACED,KAAM,wBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZrC,KAAM,8BAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZrC,KAAM,yBAER,CACED,KAAM,0BACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZrC,KAAM,gCAER,CACED,KAAM,oBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZrC,KAAM,0BAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZrC,KAAM,yBAER,CACED,KAAM,sBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZrC,KAAM,4BAER,CACED,KAAM,gBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZrC,KAAM,sBAER,CACED,KAAM,2BACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZrC,KAAM,iCAER,CACED,KAAM,iBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZrC,KAAM,uBAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZrC,KAAM,yBAER,CACED,KAAM,iBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZrC,KAAM,uBAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZrC,KAAM,yBAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZrC,KAAM,yBAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZrC,KAAM,wBAER,CACED,KAAM,yBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZrC,KAAM,+BAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZrC,KAAM,wBAER,CACED,KAAM,uBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZrC,KAAM,6BAER,CACED,KAAM,iBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZrC,KAAM,uBAER,CACED,KAAM,sBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZrC,KAAM,4BAER,CACED,KAAM,kBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZrC,KAAM,wBAER,CACED,KAAM,mBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZrC,KAAM,yBAER,CACED,KAAM,gBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZrC,KAAM,sBAER,CACED,KAAM,iBACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZrC,KAAM,uBAER,CACED,KAAM,cACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZrC,KAAM,oBAER,CACED,KAAM,gCACNE,IAAK,IACLiC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZrC,KAAM,uCC1VGsC,EAAgB,WAC3B,MAAwC7B,mBAAwB,MAAhE,mBAAO8B,EAAP,KAAqBC,EAArB,KAEA,OACE,uBAAM9C,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACG6C,EACG,sCAAOA,EAAaxC,KAApB,aAA6BwC,EAAaL,KAA1C,cAAoDK,EAAaJ,KAAjE,OACA,uBAEN,cAAC,EAAD,CACE3C,MAAOyC,EACP1B,MAAO,IACPC,WAAYgC,MAInB,ECnBDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.2da50f12.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  users: Person[];\n  onSelect: (person: Person) => void\n}\n\nexport const PeopleList: React.FC<Props> = ({ users, onSelect }) => {\n  return (\n    <div\n      className=\"dropdown-menu\"\n      role=\"menu\"\n    >\n      <div className=\"dropdown-content\">\n        {\n          users.length\n            ? (users.map(person => {\n              const {\n                name,\n                slug,\n                sex,\n              } = person;\n\n              return (\n                // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n                <div\n                  className=\"dropdown-item\"\n                  key={slug}\n                  onMouseDown={() => onSelect(person)}\n                  onKeyDown={() => onSelect(person)}\n                >\n                  <a\n                    href=\"/\"\n                    className={cn(\n                      'has-text-link',\n                      { 'has-text-danger': sex === 'f' },\n                    )}\n                  >\n                    {name}\n                  </a>\n                </div>\n              );\n            })\n            ) : (\n              <div className=\"dropdown-item\">\n                <p>No matching suggestions</p>\n              </div>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n","import { debounce } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PeopleList } from '../PeopleList';\n\ninterface Props {\n  users: Person[];\n  delay: number;\n  onSelected?: (person: Person | null) => void;\n}\n\nexport const Dropdown: React.FC<Props> = ({\n  users,\n  delay,\n  onSelected = () => { },\n}) => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n\n  const filteredPeople: Person[] = useMemo(() => {\n    return users.filter(person => person.name.toLowerCase()\n      .includes(appliedQuery.trim().toLowerCase()));\n  }, [appliedQuery]);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, delay),\n    [appliedQuery],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleOnSelected = (person: Person) => {\n    onSelected(person);\n    setQuery(person.name);\n    setAppliedQuery(person.name);\n    setIsVisible(false);\n  };\n\n  return (\n    <div className={cn('dropdown', { 'is-active': isVisible })}>\n      <div className=\"dropdown-trigger\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n          value={query}\n          onChange={handleQueryChange}\n          onFocus={() => setIsVisible(true)}\n          onBlur={() => setIsVisible(false)}\n        />\n      </div>\n      <PeopleList\n        users={filteredPeople}\n        onSelect={handleOnSelected}\n      />\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Person } from './types/Person';\nimport { Dropdown } from './components/Dropdown';\nimport { peopleFromServer } from './data/people';\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState<Person | null>(null);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedUser\n          ? <p>{`${selectedUser.name} (${selectedUser.born} - ${selectedUser.died})`}</p>\n          : 'No selected person'}\n      </h1>\n      <Dropdown\n        users={peopleFromServer}\n        delay={1000}\n        onSelected={setSelectedUser}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}